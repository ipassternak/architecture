datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "./client"
}

enum MessageRole {
  system
  user
  assistant

  @@map("message_role")
}

model Account {
  id        Int      @id @default(autoincrement())
  login     String   @unique @db.VarChar(50)
  password  String   @db.VarChar(1000)
  email     String?  @unique @db.VarChar(50)
  phone     String?  @unique @db.VarChar(25)
  name      String?  @db.VarChar(25)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp()
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp()
  Chat      Chat[]

  @@map("account")
}

model Session {
  id      String   @id @db.Uuid
  data    String
  expires DateTime @db.Timestamp()

  @@index([expires])
  @@map("session")
}

model Chat {
  id        String    @id @db.Uuid
  accountId Int       @map("account_id")
  label     String    @db.VarChar(50)
  model     String    @db.VarChar(50)
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp()
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamp()
  Account   Account   @relation(fields: [accountId], references: [id], onDelete: Cascade)
  Message   Message[]

  @@index([accountId])
  @@map("chat")
}

model Message {
  id      Int         @id @default(autoincrement())
  chatId  String      @map("chat_id") @db.Uuid
  content String      @db.VarChar(1000)
  role    MessageRole
  Chat    Chat        @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@index([chatId])
  @@map("message")
}
